plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'  // Add signing plugin for GPG signing
}

group = 'gg.launchblock'
version = '1.0-PREVIEW'

archivesBaseName = 'sdk-java'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

repositories {
    mavenCentral()  // Use Maven Central repository
}

dependencies {
    implementation 'org.apache.kafka:kafka-clients:3.9.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            // Include POM customizations (if needed)
            pom.withXml {

                // Define the project's POM metadata
                def projectNode = asNode()
                projectNode.appendNode('name', 'LaunchBlock Java SDK')
                projectNode.appendNode('description', 'A Java SDK for interacting with the LaunchBlock API')
                projectNode.appendNode('url', 'https://github.com/LaunchBlockMC/sdk-java')

                // Add license information
                def licensesNode = projectNode.appendNode('licenses')
                def licenseNode = licensesNode.appendNode('license')
                licenseNode.appendNode('name', 'The Apache License, Version 2.0')
                licenseNode.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')

                // SCM information
                def scmNode = projectNode.appendNode('scm')
                scmNode.appendNode('connection', 'scm:git:git@github.com:LaunchBlockMC/sdk-java.git')
                scmNode.appendNode('developerConnection', 'scm:git:git@github.com:LaunchBlockMC/sdk-java.git')
                scmNode.appendNode('url', 'https://github.com/LaunchBlockMC/sdk-java')
            }
        }
    }

    repositories {
        maven {
            name = "SonatypeOSS"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")  // Sonatype's repository

            credentials {
                username = project.findProperty("sonatypeUsername") ?: System.getenv("SONATYPE_USERNAME")
                password = project.findProperty("sonatypePassword") ?: System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    useGpgCmd()
    // Ensure the project is signed
    sign publishing.publications.mavenJava
}

